{"ast":null,"code":"export const CREATE_CATEGORY_INITIAL = 'CREATE_CATEGORY_INITIAL';\nexport const CREATE_CATEGORY_REQUEST = 'CREATE_CATEGORY_REQUEST';\nexport const CREATE_CATEGORY_SUCCESS = 'CREATE_CATEGORY_SUCCESS';\nexport const CREATE_CATEGORY_FAILURE = 'CREATE_CATEGORY_FAILURE';\nexport const FETCH_CATEGORY_REQUEST = 'FETCH_CATEGORY_REQUEST';\nexport const FETCH_CATEGORY_SUCCESS = 'FETCH_CATEGORY_SUCCESS';\nexport const FETCH_CATEGORY_FAILURE = 'FETCH_CATEGORY_FAILURE';\nexport const GET_CATEGORY_REQUEST = 'GET_CATEGORY_REQUEST';\nexport const GET_CATEGORY_SUCCESS = 'GET_CATEGORY_SUCCESS';\nexport const GET_CATEGORY_FAILURE = 'GET_CATEGORY_FAILURE';\nexport const GET_CATEGORY_NAME_REQUEST = 'GET_CATEGORY_NAME_REQUEST';\nexport const GET_CATEGORY_NAME_SUCCESS = 'GET_CATEGORY_NAME_SUCCESS';\nexport const GET_CATEGORY_NAME_FAILURE = 'GET_CATEGORY_NAME_FAILURE';\nexport const UPDATE_CATEGORY_REQUEST = 'UPDATE_CATEGORY_REQUEST';\nexport const UPDATE_CATEGORY_SUCCESS = 'UPDATE_CATEGORY_SUCCESS';\nexport const UPDATE_CATEGORY_FAILURE = 'UPDATE_CATEGORY_FAILURE';\nexport const DELETE_CATEGORY_REQUEST = 'DELETE_CATEGORY_REQUEST';\nexport const DELETE_CATEGORY_SUCCESS = 'DELETE_CATEGORY_SUCCESS';\nexport const DELETE_CATEGORY_FAILURE = 'DELETE_CATEGORY_FAILURE';\nexport const STATUS_CATEGORY_REQUEST = 'STATUS_CATEGORY_REQUEST';\nexport const STATUS_CATEGORY_SUCCESS = 'STATUS_CATEGORY_SUCCESS';\nexport const STATUS_CATEGORY_FAILURE = 'STATUS_CATEGORY_FAILURE';\n\nfunction createCategoryInitial() {\n  return {\n    type: CREATE_CATEGORY_INITIAL,\n    isFetching: false\n  };\n}\n\nfunction requestCreateCategory(category) {\n  return {\n    type: CREATE_CATEGORY_REQUEST,\n    isFetching: true,\n    category\n  };\n}\n\nfunction createCategorySuccess(category) {\n  return {\n    type: CREATE_CATEGORY_SUCCESS,\n    isFetching: false,\n    category\n  };\n}\n\nfunction createCategoryError(message) {\n  return {\n    type: CREATE_CATEGORY_FAILURE,\n    isFetching: false,\n    message\n  };\n}\n\nfunction requestGetCategory(category) {\n  return {\n    type: GET_CATEGORY_REQUEST,\n    isFetching: true,\n    category\n  };\n}\n\nfunction getCategorySuccess(category) {\n  //console.log(category);\n  return {\n    type: GET_CATEGORY_SUCCESS,\n    isFetching: false,\n    category\n  };\n}\n\nfunction getCategoryError(message) {\n  return {\n    type: GET_CATEGORY_FAILURE,\n    isFetching: false,\n    message\n  };\n}\n\nfunction requestGetCategoryName(category) {\n  return {\n    type: GET_CATEGORY_NAME_REQUEST,\n    isFetching: true,\n    category\n  };\n}\n\nfunction getCategoryNameSuccess(category) {\n  //console.log(category);\n  return {\n    type: GET_CATEGORY_NAME_SUCCESS,\n    isFetching: false,\n    category\n  };\n}\n\nfunction getCategoryNameError(message) {\n  return {\n    type: GET_CATEGORY_NAME_FAILURE,\n    isFetching: false,\n    message\n  };\n}\n\nfunction requestFetchCategory() {\n  return {\n    type: FETCH_CATEGORY_REQUEST,\n    isFetching: true\n  };\n}\n\nfunction fetchCategorySuccess(category) {\n  return {\n    type: FETCH_CATEGORY_SUCCESS,\n    isFetching: false,\n    category\n  };\n}\n\nfunction fetchCategoryError(message) {\n  return {\n    type: FETCH_CATEGORY_FAILURE,\n    isFetching: false,\n    message\n  };\n}\n\nfunction requestUpdateCategory(category) {\n  return {\n    type: UPDATE_CATEGORY_REQUEST,\n    isFetching: true,\n    category\n  };\n}\n\nfunction updateCategorySuccess(category) {\n  return {\n    type: UPDATE_CATEGORY_SUCCESS,\n    isFetching: false,\n    category\n  };\n}\n\nfunction updateCategoryError(message) {\n  return {\n    type: UPDATE_CATEGORY_FAILURE,\n    isFetching: false,\n    message\n  };\n}\n\nfunction requestDeleteCategory() {\n  return {\n    type: DELETE_CATEGORY_REQUEST,\n    isFetching: true\n  };\n}\n\nfunction deleteCategorySuccess(category) {\n  return {\n    type: DELETE_CATEGORY_SUCCESS,\n    isFetching: false,\n    deleteMessage: category.message,\n    category\n  };\n}\n\nfunction deleteCategoryError(message) {\n  return {\n    type: DELETE_CATEGORY_FAILURE,\n    isFetching: false,\n    message\n  };\n}\n\nfunction requestStatusCategory() {\n  return {\n    type: STATUS_CATEGORY_REQUEST,\n    isFetching: true\n  };\n}\n\nfunction statusCategorySuccess(category) {\n  return {\n    type: STATUS_CATEGORY_SUCCESS,\n    isFetching: false,\n    statusMessage: category.message,\n    category\n  };\n}\n\nfunction statusCategoryError(message) {\n  return {\n    type: STATUS_CATEGORY_FAILURE,\n    isFetching: false,\n    message\n  };\n}\n\nexport function createCategory(categoryData) {\n  const formData = new FormData(); //debugger   \n  //Update the formData object\n\n  console.log(categoryData.image);\n  formData.append(\"image\", categoryData.image);\n  formData.append(\"name\", categoryData.name);\n  formData.append(\"image_icon\", categoryData.image_icon);\n  formData.append(\"parent_id\", categoryData.parent_id);\n  const config = {\n    method: 'post',\n    headers: {\n      Accept: 'application/json',\n      //'Content-Type': 'application/x-www-form-urlencoded',\n      'Content-Type': 'multipart/form-data; boundary=<calculated when request is sent>',\n      'Access-Control-Allow-Origin': '*'\n    },\n    body: formData //body: `name=${categoryData.name}&image=${categoryData.image}&image_icon=${categoryData.image_icon}&parent_id=${categoryData.parent_id}`,\n\n  };\n  return dispatch => {\n    // We dispatch requestCreatePost to kickoff the call to the API\n    dispatch(requestCreateCategory(categoryData));\n    return fetch('http://127.0.0.1:8000/api/v1/category/store', config).then(response => response.json().then(category => ({\n      category,\n      response\n    }))).then(({\n      category,\n      response\n    }) => {\n      if (!response.ok) {\n        // If there was a problem, we want to\n        // dispatch the error condition\n        dispatch(createCategoryError(category.message));\n        return Promise.reject(category);\n      } // Dispatch the success action\n\n\n      dispatch(createCategorySuccess(category));\n      setTimeout(() => {\n        dispatch(createCategoryInitial());\n      }, 5000);\n      return Promise.resolve(category);\n    }).catch(err => console.error('Error: ', err));\n  };\n}\nexport function getCategory() {\n  const config = {\n    method: 'get',\n    headers: {\n      Accept: 'application/json',\n      //'Content-Type': 'application/x-www-form-urlencoded',\n      'Access-Control-Allow-Origin': '*'\n    }\n  };\n  return dispatch => {\n    // We dispatch requestCreatePost to kickoff the call to the API\n    dispatch(requestGetCategory());\n    return fetch('http://127.0.0.1:8000/api/v1/category', config).then(response => response.json().then(category => ({\n      category,\n      response\n    }))).then(({\n      category,\n      response\n    }) => {\n      if (!response.ok) {\n        // If there was a problem, we want to\n        // dispatch the error condition\n        dispatch(getCategoryError(category.message));\n        return Promise.reject(category);\n      } // Dispatch the success action\n\n\n      dispatch(getCategorySuccess(category));\n      return Promise.resolve(category);\n    }).catch(err => console.error('Error: ', err));\n  };\n}\nexport function updateCategory(categoryData) {\n  const config = {\n    method: 'put',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'Access-Control-Allow-Origin': '*'\n    },\n    body: `name=${categoryData.name}`\n  };\n  return dispatch => {\n    // We dispatch requestUpdatePost to kickoff the call to the API\n    dispatch(requestUpdateCategory(categoryData));\n    return fetch('http://127.0.0.1:8000/api/v1/category/' + categoryData.id + '/update', config).then(response => response.json().then(category => ({\n      category,\n      response\n    }))).then(({\n      category,\n      response\n    }) => {\n      if (!response.ok) {\n        // If there was a problem, we want to\n        // dispatch the error condition\n        dispatch(updateCategoryError(category.message));\n        return Promise.reject(category);\n      } // Dispatch the success action\n\n\n      dispatch(updateCategorySuccess(category));\n      return Promise.resolve(category);\n    }).catch(err => console.error('Error: ', err));\n  };\n}\nexport function fetchCategory(categoryId) {\n  const config = {\n    method: 'get',\n    headers: {\n      Accept: 'application/json',\n      'Access-Control-Allow-Origin': '*'\n    }\n  };\n  return dispatch => {\n    // We dispatch requestFetchPost to kickoff the call to the API\n    dispatch(requestFetchCategory(categoryId));\n    return fetch('http://127.0.0.1:8000/api/v1/category/' + categoryId.categoryId + '/edit', config).then(response => response.json().then(category => ({\n      category,\n      response\n    }))).then(({\n      category,\n      response\n    }) => {\n      if (!response.ok) {\n        // If there was a problem, we want to\n        // dispatch the error condition\n        dispatch(fetchCategoryError(category.message));\n        return Promise.reject(category);\n      } // Dispatch the success action\n\n\n      dispatch(fetchCategorySuccess(category.data.category_info));\n      return Promise.resolve(category);\n    }).catch(err => console.error('Error: ', err));\n  };\n}\nexport function deleteCategory(categoryId) {\n  const config = {\n    method: 'delete',\n    headers: {\n      Accept: 'application/json',\n      'Access-Control-Allow-Origin': '*'\n    }\n  };\n  return dispatch => {\n    // We dispatch requestDeletePost to kickoff the call to the API\n    dispatch(requestDeleteCategory(categoryId));\n    return fetch('http://127.0.0.1:8000/api/v1/category/' + categoryId.categoryId + '/delete', config).then(response => response.json().then(category => ({\n      category,\n      response\n    }))).then(({\n      category,\n      response\n    }) => {\n      if (!response.ok) {\n        // If there was a problem, we want to\n        // dispatch the error condition\n        dispatch(deleteCategoryError(category.message));\n        return Promise.reject(category);\n      } // Dispatch the success action\n\n\n      dispatch(deleteCategorySuccess(category));\n      return Promise.resolve(category);\n    }).catch(err => console.error('Error: ', err));\n  };\n}\nexport function statusCategory(categoryId) {\n  const config = {\n    method: 'put',\n    headers: {\n      Accept: 'application/json',\n      'Access-Control-Allow-Origin': '*'\n    }\n  };\n  return dispatch => {\n    // We dispatch requestStatusPost to kickoff the call to the API\n    dispatch(requestStatusCategory(categoryId));\n    return fetch('http://127.0.0.1:8000/api/v1/category/' + categoryId.categoryId + '/status', config).then(response => response.json().then(category => ({\n      category,\n      response\n    }))).then(({\n      category,\n      response\n    }) => {\n      if (!response.ok) {\n        // If there was a problem, we want to\n        // dispatch the error condition\n        dispatch(statusCategoryError(category.message));\n        return Promise.reject(category);\n      } // Dispatch the success action\n\n\n      dispatch(statusCategorySuccess(category));\n      return Promise.resolve(category);\n    }).catch(err => console.error('Error: ', err));\n  };\n}\nexport function getCategoryName() {\n  const config = {\n    method: 'get',\n    headers: {\n      Accept: 'application/json',\n      'Access-Control-Allow-Origin': '*'\n    }\n  };\n  return dispatch => {\n    // We dispatch requestCreatePost to kickoff the call to the API\n    dispatch(requestGetCategoryName());\n    return fetch('http://127.0.0.1:8000/api/v1/category/create', config).then(response => response.json().then(category => ({\n      category,\n      response\n    }))).then(({\n      category,\n      response\n    }) => {\n      if (!response.ok) {\n        // If there was a problem, we want to\n        // dispatch the error condition\n        dispatch(getCategoryNameError(category.message));\n        return Promise.reject(category);\n      } // Dispatch the success action\n\n\n      dispatch(getCategoryNameSuccess(category));\n      return Promise.resolve(category);\n    }).catch(err => console.error('Error: ', err));\n  };\n}","map":{"version":3,"sources":["/opt/lampp/htdocs/react-dashboard-master/src/actions/categories.js"],"names":["CREATE_CATEGORY_INITIAL","CREATE_CATEGORY_REQUEST","CREATE_CATEGORY_SUCCESS","CREATE_CATEGORY_FAILURE","FETCH_CATEGORY_REQUEST","FETCH_CATEGORY_SUCCESS","FETCH_CATEGORY_FAILURE","GET_CATEGORY_REQUEST","GET_CATEGORY_SUCCESS","GET_CATEGORY_FAILURE","GET_CATEGORY_NAME_REQUEST","GET_CATEGORY_NAME_SUCCESS","GET_CATEGORY_NAME_FAILURE","UPDATE_CATEGORY_REQUEST","UPDATE_CATEGORY_SUCCESS","UPDATE_CATEGORY_FAILURE","DELETE_CATEGORY_REQUEST","DELETE_CATEGORY_SUCCESS","DELETE_CATEGORY_FAILURE","STATUS_CATEGORY_REQUEST","STATUS_CATEGORY_SUCCESS","STATUS_CATEGORY_FAILURE","createCategoryInitial","type","isFetching","requestCreateCategory","category","createCategorySuccess","createCategoryError","message","requestGetCategory","getCategorySuccess","getCategoryError","requestGetCategoryName","getCategoryNameSuccess","getCategoryNameError","requestFetchCategory","fetchCategorySuccess","fetchCategoryError","requestUpdateCategory","updateCategorySuccess","updateCategoryError","requestDeleteCategory","deleteCategorySuccess","deleteMessage","deleteCategoryError","requestStatusCategory","statusCategorySuccess","statusMessage","statusCategoryError","createCategory","categoryData","formData","FormData","console","log","image","append","name","image_icon","parent_id","config","method","headers","Accept","body","dispatch","fetch","then","response","json","ok","Promise","reject","setTimeout","resolve","catch","err","error","getCategory","updateCategory","id","fetchCategory","categoryId","data","category_info","deleteCategory","statusCategory","getCategoryName"],"mappings":"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","sourcesContent":["export const CREATE_CATEGORY_INITIAL = 'CREATE_CATEGORY_INITIAL';\nexport const CREATE_CATEGORY_REQUEST = 'CREATE_CATEGORY_REQUEST';\nexport const CREATE_CATEGORY_SUCCESS = 'CREATE_CATEGORY_SUCCESS';\nexport const CREATE_CATEGORY_FAILURE = 'CREATE_CATEGORY_FAILURE';\nexport const FETCH_CATEGORY_REQUEST = 'FETCH_CATEGORY_REQUEST';\nexport const FETCH_CATEGORY_SUCCESS = 'FETCH_CATEGORY_SUCCESS';\nexport const FETCH_CATEGORY_FAILURE = 'FETCH_CATEGORY_FAILURE';\nexport const GET_CATEGORY_REQUEST    = 'GET_CATEGORY_REQUEST';\nexport const GET_CATEGORY_SUCCESS    = 'GET_CATEGORY_SUCCESS';\nexport const GET_CATEGORY_FAILURE    = 'GET_CATEGORY_FAILURE';\nexport const GET_CATEGORY_NAME_REQUEST    = 'GET_CATEGORY_NAME_REQUEST';\nexport const GET_CATEGORY_NAME_SUCCESS    = 'GET_CATEGORY_NAME_SUCCESS';\nexport const GET_CATEGORY_NAME_FAILURE    = 'GET_CATEGORY_NAME_FAILURE';\nexport const UPDATE_CATEGORY_REQUEST = 'UPDATE_CATEGORY_REQUEST';\nexport const UPDATE_CATEGORY_SUCCESS = 'UPDATE_CATEGORY_SUCCESS';\nexport const UPDATE_CATEGORY_FAILURE = 'UPDATE_CATEGORY_FAILURE';\nexport const DELETE_CATEGORY_REQUEST = 'DELETE_CATEGORY_REQUEST';\nexport const DELETE_CATEGORY_SUCCESS = 'DELETE_CATEGORY_SUCCESS';\nexport const DELETE_CATEGORY_FAILURE = 'DELETE_CATEGORY_FAILURE';\nexport const STATUS_CATEGORY_REQUEST = 'STATUS_CATEGORY_REQUEST';\nexport const STATUS_CATEGORY_SUCCESS = 'STATUS_CATEGORY_SUCCESS';\nexport const STATUS_CATEGORY_FAILURE = 'STATUS_CATEGORY_FAILURE';\n\nfunction createCategoryInitial() {\n  return {\n    type: CREATE_CATEGORY_INITIAL,\n    isFetching: false,\n  };\n}\n\nfunction requestCreateCategory(category) {\n  return {\n    type: CREATE_CATEGORY_REQUEST,\n    isFetching: true,\n    category,\n  };\n}\n\nfunction createCategorySuccess(category) {\n  return {\n    type: CREATE_CATEGORY_SUCCESS,\n    isFetching: false,\n    category,\n  };\n}\n\nfunction createCategoryError(message) {\n  return {\n    type: CREATE_CATEGORY_FAILURE,\n    isFetching: false,\n    message,\n  };\n}\n\nfunction requestGetCategory(category) {\n  return {\n    type: GET_CATEGORY_REQUEST,\n    isFetching: true,\n    category,\n  };\n}\n\nfunction getCategorySuccess(category) {\n //console.log(category);\n  return {\n    type: GET_CATEGORY_SUCCESS,\n    isFetching: false,\n    category,\n  };\n}\n\nfunction getCategoryError(message) {\n  return {\n    type: GET_CATEGORY_FAILURE,\n    isFetching: false,\n    message,\n  };\n}\n\nfunction requestGetCategoryName(category) {\n  return {\n    type: GET_CATEGORY_NAME_REQUEST,\n    isFetching: true,\n    category,\n  };\n}\n\nfunction getCategoryNameSuccess(category) {\n //console.log(category);\n  return {\n    type: GET_CATEGORY_NAME_SUCCESS,\n    isFetching: false,\n    category,\n  };\n}\n\nfunction getCategoryNameError(message) {\n  return {\n    type: GET_CATEGORY_NAME_FAILURE,\n    isFetching: false,\n    message,\n  };\n}\n\nfunction requestFetchCategory() {\n  return {\n    type: FETCH_CATEGORY_REQUEST,\n    isFetching: true,\n  };\n}\n\nfunction fetchCategorySuccess(category) {\n  return {\n    type: FETCH_CATEGORY_SUCCESS,\n    isFetching: false,\n    category,\n  };\n}\n\nfunction fetchCategoryError(message) {\n  return {\n    type: FETCH_CATEGORY_FAILURE,\n    isFetching: false,\n    message,\n  };\n}\n\nfunction requestUpdateCategory(category) {\n  return {\n    type: UPDATE_CATEGORY_REQUEST,\n    isFetching: true,\n    category,\n  };\n}\n\nfunction updateCategorySuccess(category) {\n  return {\n    type: UPDATE_CATEGORY_SUCCESS,\n    isFetching: false,\n    category,\n  };\n}\n\nfunction updateCategoryError(message) {\n  return {\n    type: UPDATE_CATEGORY_FAILURE,\n    isFetching: false,\n    message,\n  };\n}\n\nfunction requestDeleteCategory() {\n  return {\n    type: DELETE_CATEGORY_REQUEST,\n    isFetching: true,\n  };\n}\n\nfunction deleteCategorySuccess(category) {\n  return {\n    type: DELETE_CATEGORY_SUCCESS,\n    isFetching: false,\n    deleteMessage:category.message,\n    category,\n  };\n}\n\nfunction deleteCategoryError(message) {\n  return {\n    type: DELETE_CATEGORY_FAILURE,\n    isFetching: false,\n    message,\n  };\n}\n\nfunction requestStatusCategory() {\n  return {\n    type: STATUS_CATEGORY_REQUEST,\n    isFetching: true,\n  };\n}\n\nfunction statusCategorySuccess(category) {\n  return {\n    type: STATUS_CATEGORY_SUCCESS,\n    isFetching: false,\n    statusMessage:category.message,\n    category,\n  };\n}\n\nfunction statusCategoryError(message) {\n  return {\n    type: STATUS_CATEGORY_FAILURE,\n    isFetching: false,\n    message,\n  };\n}\n\nexport function createCategory(categoryData) {\n  const formData = new FormData();\n   //debugger   \n  //Update the formData object\n  console.log(categoryData.image);\n  formData.append(\"image\", categoryData.image);\n  formData.append(\"name\", categoryData.name);\n  formData.append(\"image_icon\", categoryData.image_icon);\n  formData.append(\"parent_id\", categoryData.parent_id);\n  const config = {\n    method: 'post',\n    headers: {\n      Accept: 'application/json',\n      //'Content-Type': 'application/x-www-form-urlencoded',\n      'Content-Type': 'multipart/form-data; boundary=<calculated when request is sent>',\n      'Access-Control-Allow-Origin': '*',\n    },\n    body: formData,\n    //body: `name=${categoryData.name}&image=${categoryData.image}&image_icon=${categoryData.image_icon}&parent_id=${categoryData.parent_id}`,\n  };\n\n  return dispatch => {\n    // We dispatch requestCreatePost to kickoff the call to the API\n    dispatch(requestCreateCategory(categoryData));\n    \n    return fetch('http://127.0.0.1:8000/api/v1/category/store', config)\n      .then(response => response.json().then(category => ({ category, response })))\n      .then(({ category, response }) => {\n        if (!response.ok) {\n          // If there was a problem, we want to\n          // dispatch the error condition\n          dispatch(createCategoryError(category.message));\n          return Promise.reject(category);\n        }\n        // Dispatch the success action\n        dispatch(createCategorySuccess(category));\n        setTimeout(() => {\n          dispatch(createCategoryInitial());\n        }, 5000);\n        return Promise.resolve(category);\n      })\n      .catch(err => console.error('Error: ', err));\n    \n  };\n}\n\nexport function getCategory() {\n  const config = {\n    method: 'get',\n    headers: {\n      Accept: 'application/json',\n      //'Content-Type': 'application/x-www-form-urlencoded',\n      'Access-Control-Allow-Origin': '*',\n    },\n  };\n\n  return dispatch => {\n    // We dispatch requestCreatePost to kickoff the call to the API\n    dispatch(requestGetCategory());\n    \n    return fetch('http://127.0.0.1:8000/api/v1/category', config)\n      .then(response => response.json().then(category => ({ category, response })))\n      .then(({ category, response }) => {\n        if (!response.ok) {\n          // If there was a problem, we want to\n          // dispatch the error condition\n          dispatch(getCategoryError(category.message));\n          return Promise.reject(category);\n        }\n        // Dispatch the success action\n        dispatch(getCategorySuccess(category));\n       \n        return Promise.resolve(category);\n      })\n      .catch(err => console.error('Error: ', err));\n    \n  };\n}\n\nexport function updateCategory(categoryData) {\n  const config = {\n    method: 'put',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'Access-Control-Allow-Origin': '*',\n    },\n    body: `name=${categoryData.name}`,\n  };\n\n  return dispatch => {\n    // We dispatch requestUpdatePost to kickoff the call to the API\n    dispatch(requestUpdateCategory(categoryData));\n    \n    return fetch('http://127.0.0.1:8000/api/v1/category/'+categoryData.id+'/update', config)\n      .then(response => response.json().then(category => ({ category, response })))\n      .then(({ category, response }) => {\n        if (!response.ok) {\n          // If there was a problem, we want to\n          // dispatch the error condition\n          dispatch(updateCategoryError(category.message));\n          return Promise.reject(category);\n        }\n        // Dispatch the success action\n        dispatch(updateCategorySuccess(category));\n       \n        return Promise.resolve(category);\n      })\n      .catch(err => console.error('Error: ', err));\n    \n  };\n}\n\nexport function fetchCategory(categoryId) {\n  const config = {\n    method: 'get',\n    headers: {\n      Accept: 'application/json',\n      'Access-Control-Allow-Origin': '*',\n    },\n  };\n\n  return dispatch => {\n    // We dispatch requestFetchPost to kickoff the call to the API\n    dispatch(requestFetchCategory(categoryId));\n    \n    return fetch('http://127.0.0.1:8000/api/v1/category/'+categoryId.categoryId+'/edit', config)\n      .then(response => response.json().then(category => ({ category, response })))\n      .then(({ category, response }) => {\n        if (!response.ok) {\n          // If there was a problem, we want to\n          // dispatch the error condition\n          dispatch(fetchCategoryError(category.message));\n          return Promise.reject(category);\n        }\n        // Dispatch the success action\n        dispatch(fetchCategorySuccess(category.data.category_info));\n    \n        return Promise.resolve(category);\n      })\n      .catch(err => console.error('Error: ', err));\n    \n  };\n}\n\nexport function deleteCategory(categoryId) {\n  const config = {\n    method: 'delete',\n    headers: {\n      Accept: 'application/json',\n      'Access-Control-Allow-Origin': '*',\n    },\n  };\n  \n  return dispatch => {\n    // We dispatch requestDeletePost to kickoff the call to the API\n    dispatch(requestDeleteCategory(categoryId));\n    \n    return fetch('http://127.0.0.1:8000/api/v1/category/'+categoryId.categoryId+'/delete', config)\n      .then(response => response.json().then(category => ({ category, response })))\n      .then(({ category, response }) => {\n        if (!response.ok) {\n          // If there was a problem, we want to\n          // dispatch the error condition\n          dispatch(deleteCategoryError(category.message));\n          return Promise.reject(category);\n        }\n        // Dispatch the success action\n        dispatch(deleteCategorySuccess(category));\n    \n        return Promise.resolve(category);\n      })\n      .catch(err => console.error('Error: ', err));\n    \n  };\n}\n\nexport function statusCategory(categoryId) {\n  const config = {\n    method: 'put',\n    headers: {\n      Accept: 'application/json',\n      'Access-Control-Allow-Origin': '*',\n    },\n  };\n\n  return dispatch => {\n    // We dispatch requestStatusPost to kickoff the call to the API\n    dispatch(requestStatusCategory(categoryId));\n    \n    return fetch('http://127.0.0.1:8000/api/v1/category/'+categoryId.categoryId+'/status', config)\n      .then(response => response.json().then(category => ({ category, response })))\n      .then(({ category, response }) => {\n        if (!response.ok) {\n          // If there was a problem, we want to\n          // dispatch the error condition\n          dispatch(statusCategoryError(category.message));\n          return Promise.reject(category);\n        }\n        // Dispatch the success action\n        dispatch(statusCategorySuccess(category));\n    \n        return Promise.resolve(category);\n      })\n      .catch(err => console.error('Error: ', err));\n    \n  };\n}\n\nexport function getCategoryName() {\n  const config = {\n    method: 'get',\n    headers: {\n      Accept: 'application/json',\n      'Access-Control-Allow-Origin': '*',\n    },\n  };\n\n  return dispatch => {\n    // We dispatch requestCreatePost to kickoff the call to the API\n    dispatch(requestGetCategoryName());\n    \n    return fetch('http://127.0.0.1:8000/api/v1/category/create', config)\n      .then(response => response.json().then(category => ({ category, response })))\n      .then(({ category, response }) => {\n        if (!response.ok) {\n          // If there was a problem, we want to\n          // dispatch the error condition\n          dispatch(getCategoryNameError(category.message));\n          return Promise.reject(category);\n        }\n        // Dispatch the success action\n        dispatch(getCategoryNameSuccess(category));\n       \n        return Promise.resolve(category);\n      })\n      .catch(err => console.error('Error: ', err));\n    \n  };\n}"]},"metadata":{},"sourceType":"module"}