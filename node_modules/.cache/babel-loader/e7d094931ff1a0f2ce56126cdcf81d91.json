{"ast":null,"code":"import { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILURE, LOGOUT_SUCCESS, REGISTER_REQUEST, REGISTER_SUCCESS, REGISTER_FAILURE } from '../actions/user';\nconst token = localStorage.getItem('token');\nexport default function auth(state = {\n  isFetching: false,\n  isAuthenticated: !!token\n}, action) {\n  switch (action.type) {\n    case LOGIN_REQUEST:\n      return Object.assign({}, state, {\n        isFetching: true,\n        isAuthenticated: false\n      });\n\n    case LOGIN_SUCCESS:\n      return Object.assign({}, state, {\n        isFetching: false,\n        isAuthenticated: true,\n        errorMessage: ''\n      });\n\n    case LOGIN_FAILURE:\n      return Object.assign({}, state, {\n        isFetching: false,\n        isAuthenticated: false,\n        errorMessage: action.payload\n      });\n\n    case REGISTER_REQUEST:\n      return Object.assign({}, state, {\n        isFailed: true\n      });\n\n    case REGISTER_SUCCESS:\n      return Object.assign({}, state, {\n        isFailed: false,\n        errorMessage: ''\n      });\n\n    case REGISTER_FAILURE:\n      return Object.assign({}, state, {\n        isFetching: false,\n        errorMessage: action.payload\n      });\n\n    case LOGOUT_SUCCESS:\n      return Object.assign({}, state, {\n        isAuthenticated: false\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/opt/lampp/htdocs/react-dashboard-master/src/reducers/auth.js"],"names":["LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT_SUCCESS","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","token","localStorage","getItem","auth","state","isFetching","isAuthenticated","action","type","Object","assign","errorMessage","payload","isFailed"],"mappings":"AAAA,SACEA,aADF,EACiBC,aADjB,EACgCC,aADhC,EAC+CC,cAD/C,EAC8DC,gBAD9D,EAC+EC,gBAD/E,EACgGC,gBADhG,QAEO,iBAFP;AAIA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,eAAe,SAASC,IAAT,CAAcC,KAAK,GAAG;AACnCC,EAAAA,UAAU,EAAE,KADuB;AAEnCC,EAAAA,eAAe,EAAE,CAAC,CAACN;AAFgB,CAAtB,EAGZO,MAHY,EAGJ;AACT,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKf,aAAL;AACI,aAAOgB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyB;AAC5BC,QAAAA,UAAU,EAAE,IADgB;AAE5BC,QAAAA,eAAe,EAAE;AAFW,OAAzB,CAAP;;AAIJ,SAAKZ,aAAL;AACI,aAAOe,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyB;AAC5BC,QAAAA,UAAU,EAAE,KADgB;AAE5BC,QAAAA,eAAe,EAAE,IAFW;AAG5BK,QAAAA,YAAY,EAAE;AAHc,OAAzB,CAAP;;AAKJ,SAAKhB,aAAL;AACI,aAAOc,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyB;AAC5BC,QAAAA,UAAU,EAAE,KADgB;AAE5BC,QAAAA,eAAe,EAAE,KAFW;AAG5BK,QAAAA,YAAY,EAAEJ,MAAM,CAACK;AAHO,OAAzB,CAAP;;AAKA,SAAKf,gBAAL;AACE,aAAOY,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyB;AAC5BS,QAAAA,QAAQ,EAAE;AADkB,OAAzB,CAAP;;AAGJ,SAAKf,gBAAL;AACI,aAAOW,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyB;AAC5BS,QAAAA,QAAQ,EAAE,KADkB;AAE5BF,QAAAA,YAAY,EAAE;AAFc,OAAzB,CAAP;;AAIJ,SAAKZ,gBAAL;AACI,aAAOU,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyB;AAC5BC,QAAAA,UAAU,EAAE,KADgB;AAE5BM,QAAAA,YAAY,EAAEJ,MAAM,CAACK;AAFO,OAAzB,CAAP;;AAIN,SAAKhB,cAAL;AACI,aAAOa,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyB;AAC5BE,QAAAA,eAAe,EAAE;AADW,OAAzB,CAAP;;AAGJ;AACI,aAAOF,KAAP;AArCR;AAuCD","sourcesContent":["import {\n  LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILURE, LOGOUT_SUCCESS,REGISTER_REQUEST,REGISTER_SUCCESS,REGISTER_FAILURE,\n} from '../actions/user';\n\nconst token = localStorage.getItem('token');\nexport default function auth(state = {\n  isFetching: false,\n  isAuthenticated: !!token,\n}, action) {\n  switch (action.type) {\n      case LOGIN_REQUEST:\n          return Object.assign({}, state, {\n              isFetching: true,\n              isAuthenticated: false,\n          });\n      case LOGIN_SUCCESS:\n          return Object.assign({}, state, {\n              isFetching: false,\n              isAuthenticated: true,\n              errorMessage: '',\n          });\n      case LOGIN_FAILURE:\n          return Object.assign({}, state, {\n              isFetching: false,\n              isAuthenticated: false,\n              errorMessage: action.payload,\n          });\n          case REGISTER_REQUEST:\n            return Object.assign({}, state, {\n                isFailed: true,     \n            });\n        case REGISTER_SUCCESS:\n            return Object.assign({}, state, {\n                isFailed: false,\n                errorMessage: '',\n            });\n        case REGISTER_FAILURE:\n            return Object.assign({}, state, {\n                isFetching: false,\n                errorMessage: action.payload,\n            });    \n      case LOGOUT_SUCCESS:\n          return Object.assign({}, state, {\n              isAuthenticated: false,\n          });\n      default:\n          return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}