{"ast":null,"code":"import _defineProperty from \"/opt/lampp/htdocs/react-dashboard-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/opt/lampp/htdocs/react-dashboard-master/src/pages/categories/CategoryEdit.js\";\nimport React, { PureComponent } from 'react';\nimport { Row, Col, Form, FormGroup, Label, Input, Button, ButtonGroup, Breadcrumb, BreadcrumbItem, Alert } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Widget from '../../components/Widget/Widget';\nimport { updateCategory, createCategory, getCategoryName, fetchCategory } from '../../actions/categories';\nimport s from '../profile/Profile.module.scss';\n\nclass CategoryEdit extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"changeName\", event => {\n      //console.log(event.target.value);\n      this.setState({\n        name: event.target.value\n      });\n    });\n\n    _defineProperty(this, \"doEditCategory\", () => {\n      try {\n        this.props.dispatch(fetchCategory({\n          categoryId: this.state.id\n        })).then(() => this.setState({\n          categoryEditData: this.props.categoryEditData //name: this.props.categoryEditData.name,\n\n        }));\n        let input = {};\n        input[\"name\"] = this.state.categoryEditData.name;\n        input[\"image\"] = this.state.categoryEditData.image;\n        input[\"image_icon\"] = this.state.categoryEditData.image_icon;\n        input[\"parent_id\"] = this.state.categoryEditData.parent_id;\n        this.setState({\n          input: input\n        });\n        console.log(this.props.categoryEditData);\n      } catch (error) {\n        console.log(error);\n      }\n    });\n\n    _defineProperty(this, \"doGetCategoryName\", () => {\n      try {\n        this.props.dispatch(getCategoryName({\n          categoryName: this.state.categoryName\n        })).then(() => this.setState({\n          categoryName: this.props.categoryName\n        }));\n      } catch (error) {\n        console.log(error);\n      }\n    });\n\n    _defineProperty(this, \"doUpdateCategory\", e => {\n      this.props.dispatch(updateCategory({\n        name: this.state.name,\n        id: this.state.id\n      })).then(() => this.setState({\n        name: ''\n      }));\n      e.preventDefault();\n    });\n\n    this.state = {\n      name: '',\n      input: {\n        name: '',\n        image: '',\n        image_icon: '',\n        parent_id: ''\n      },\n      formData: {},\n      errors: {},\n      categoryName: {},\n      categoryEditData: {},\n      id: this.props.match.params.id\n    };\n  }\n\n  async componentDidMount() {\n    var id = this.state.id;\n    this.doEditCategory();\n    this.doGetCategoryName();\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: s.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Breadcrumb, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    }, \"YOU ARE HERE\"), /*#__PURE__*/React.createElement(BreadcrumbItem, {\n      active: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }, \"Category\")), /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"mb-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }\n    }, \"Category\"), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Widget, {\n      title: /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }\n      }, \"Edit Category \", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"fw-semi-bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 33\n        }\n      }, \"Form\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.doUpdateCategory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 15\n      }\n    }, this.props.message && /*#__PURE__*/React.createElement(Alert, {\n      className: \"alert-sm\",\n      bsstyle: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 19\n      }\n    }, this.props.message), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"input-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 19\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Input, {\n      bsSize: \"lg\",\n      type: \"text\",\n      name: \"name\",\n      id: \"input-name\",\n      value: this.state.input.name,\n      required: true,\n      onChange: this.changeName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ButtonGroup, {\n      className: \"pull-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/app/categories\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      to: \"/app/categories\",\n      className: \"ml-sm\",\n      color: \"default\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }\n    }, \"Cancel\")), /*#__PURE__*/React.createElement(Button, {\n      color: \"danger\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }\n    }, this.props.isFetching ? 'Updating...' : 'Update'))))))));\n  }\n\n}\n\n_defineProperty(CategoryEdit, \"propTypes\", {\n  dispatch: PropTypes.func.isRequired,\n  message: PropTypes.string,\n  isFetching: PropTypes.bool,\n  categoryName: PropTypes.object,\n  categoryEditData: PropTypes.object\n});\n\n_defineProperty(CategoryEdit, \"defaultProps\", {\n  isFetching: false,\n  message: null,\n  categoryName: {},\n  categoryEditData: {}\n});\n\nfunction mapStateToProps(state) {\n  console.log(state.categories.categoryEditData);\n  return {\n    isFetching: state.categories.isFetching,\n    message: state.categories.message,\n    categoryName: state.categories.category,\n    categoryEditData: state.categories.categoryEditData\n  };\n}\n\nexport default connect(mapStateToProps)(CategoryEdit);","map":{"version":3,"sources":["/opt/lampp/htdocs/react-dashboard-master/src/pages/categories/CategoryEdit.js"],"names":["React","PureComponent","Row","Col","Form","FormGroup","Label","Input","Button","ButtonGroup","Breadcrumb","BreadcrumbItem","Alert","PropTypes","connect","Link","Widget","updateCategory","createCategory","getCategoryName","fetchCategory","s","CategoryEdit","constructor","props","event","setState","name","target","value","dispatch","categoryId","state","id","then","categoryEditData","input","image","image_icon","parent_id","console","log","error","categoryName","e","preventDefault","formData","errors","match","params","componentDidMount","doEditCategory","doGetCategoryName","onSubmit","render","root","doUpdateCategory","message","changeName","isFetching","func","isRequired","string","bool","object","mapStateToProps","categories","category"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,aAAf,QAAmC,OAAnC;AACA,SACEC,GADF,EAEEC,GAFF,EAGEC,IAHF,EAIEC,SAJF,EAKEC,KALF,EAMEC,KANF,EAOEC,MAPF,EAQEC,WARF,EASEC,UATF,EAUEC,cAVF,EAWEC,KAXF,QAYO,YAZP;AAcA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,IAAR,QAAoB,kBAApB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SAASC,cAAT,EAAwBC,cAAxB,EAAwCC,eAAxC,EAAwDC,aAAxD,QAA6E,0BAA7E;AAEA,OAAOC,CAAP,MAAc,gCAAd;;AAEA,MAAMC,YAAN,SAA2BrB,aAA3B,CAAyC;AAiBvCsB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,wCAyBLC,KAAD,IAAW;AACtB;AACA,WAAKC,QAAL,CAAc;AAACC,QAAAA,IAAI,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAApB,OAAd;AACD,KA5BkB;;AAAA,4CA8BF,MAAM;AACrB,UAAI;AACF,aAAKL,KAAL,CACKM,QADL,CAEMV,aAAa,CAAC;AACZW,UAAAA,UAAU,EAAE,KAAKC,KAAL,CAAWC;AADX,SAAD,CAFnB,EAMKC,IANL,CAMU,MACJ,KAAKR,QAAL,CAAc;AACbS,UAAAA,gBAAgB,EAAE,KAAKX,KAAL,CAAWW,gBADhB,CAEb;;AAFa,SAAd,CAPN;AAYI,YAAIC,KAAK,GAAG,EAAZ;AACEA,QAAAA,KAAK,CAAC,MAAD,CAAL,GAAgB,KAAKJ,KAAL,CAAWG,gBAAX,CAA4BR,IAA5C;AACAS,QAAAA,KAAK,CAAC,OAAD,CAAL,GAAiB,KAAKJ,KAAL,CAAWG,gBAAX,CAA4BE,KAA7C;AACAD,QAAAA,KAAK,CAAC,YAAD,CAAL,GAAsB,KAAKJ,KAAL,CAAWG,gBAAX,CAA4BG,UAAlD;AACAF,QAAAA,KAAK,CAAC,WAAD,CAAL,GAAqB,KAAKJ,KAAL,CAAWG,gBAAX,CAA4BI,SAAjD;AACA,aAAKb,QAAL,CAAc;AAACU,UAAAA,KAAK,EAACA;AAAP,SAAd;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAL,CAAWW,gBAAvB;AACL,OApBH,CAoBG,OAAOO,KAAP,EAAc;AACfF,QAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD;AACF,KAtDkB;;AAAA,+CAwDC,MAAM;AACxB,UAAI;AACF,aAAKlB,KAAL,CACKM,QADL,CAEMX,eAAe,CAAC;AACdwB,UAAAA,YAAY,EAAE,KAAKX,KAAL,CAAWW;AADX,SAAD,CAFrB,EAMKT,IANL,CAMU,MACJ,KAAKR,QAAL,CAAc;AACZiB,UAAAA,YAAY,EAAE,KAAKnB,KAAL,CAAWmB;AADb,SAAd,CAPN;AAWC,OAZH,CAYK,OAAOD,KAAP,EAAc;AACjBF,QAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD;AACF,KAxEkB;;AAAA,8CA0ECE,CAAD,IAAO;AACxB,WAAKpB,KAAL,CACGM,QADH,CAEIb,cAAc,CAAC;AACbU,QAAAA,IAAI,EAAE,KAAKK,KAAL,CAAWL,IADJ;AAEbM,QAAAA,EAAE,EAAC,KAAKD,KAAL,CAAWC;AAFD,OAAD,CAFlB,EAOGC,IAPH,CAOQ,MACJ,KAAKR,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAE;AADM,OAAd,CARJ;AAYAiB,MAAAA,CAAC,CAACC,cAAF;AACD,KAxFkB;;AAGjB,SAAKb,KAAL,GAAa;AACXL,MAAAA,IAAI,EAAE,EADK;AAEXS,MAAAA,KAAK,EAAE;AACLT,QAAAA,IAAI,EAAC,EADA;AAELU,QAAAA,KAAK,EAAC,EAFD;AAGLC,QAAAA,UAAU,EAAC,EAHN;AAILC,QAAAA,SAAS,EAAC;AAJL,OAFI;AAQXO,MAAAA,QAAQ,EAAE,EARC;AASXC,MAAAA,MAAM,EAAE,EATG;AAUXJ,MAAAA,YAAY,EAAE,EAVH;AAWXR,MAAAA,gBAAgB,EAAC,EAXN;AAYXF,MAAAA,EAAE,EAAG,KAAKT,KAAL,CAAWwB,KAAX,CAAiBC,MAAjB,CAAwBhB;AAZlB,KAAb;AAcD;;AAEsB,QAAjBiB,iBAAiB,GAAE;AACvB,QAAIjB,EAAE,GAAG,KAAKD,KAAL,CAAWC,EAApB;AACC,SAAKkB,cAAL;AACA,SAAKC,iBAAL;AACF;;AAmEDC,EAAAA,QAAQ,CAACT,CAAD,EAAI;AACVA,IAAAA,CAAC,CAACC,cAAF;AACD;;AAEDS,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAEjC,CAAC,CAACkC,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,oBAAC,cAAD;AAAgB,MAAA,MAAM,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,CADF,eAKE;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,eAME,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,KAAK,eACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCACgB;AAAM,QAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADhB,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOE,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKC,gBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKhC,KAAL,CAAWiC,OAAX,iBACG,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,UAAjB;AAA4B,MAAA,OAAO,EAAC,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKjC,KAAL,CAAWiC,OADd,CAFJ,eAME,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAC,IAAd;AAAmB,MAAA,IAAI,EAAC,MAAxB;AAA+B,MAAA,IAAI,EAAC,MAApC;AAA2C,MAAA,EAAE,EAAC,YAA9C;AAA4D,MAAA,KAAK,EAAE,KAAKzB,KAAL,CAAWI,KAAX,CAAiBT,IAApF;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,QAAQ,EAAE,KAAK+B,UAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CANF,eAaE;AAAK,MAAA,SAAS,EAAC,mDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAC,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,iBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,iBAAX;AAA6B,MAAA,SAAS,EAAC,OAAvC;AAA+C,MAAA,KAAK,EAAC,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADA,eAIE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAuB,MAAA,IAAI,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKlC,KAAL,CAAWmC,UAAX,GAAwB,aAAxB,GAAwC,QAD3C,CAJF,CADF,CAbF,CAPF,CADF,CADF,CANF,CADF;AA6CD;;AA7JsC;;gBAAnCrC,Y,eAEe;AACjBQ,EAAAA,QAAQ,EAAEjB,SAAS,CAAC+C,IAAV,CAAeC,UADR;AAEjBJ,EAAAA,OAAO,EAAE5C,SAAS,CAACiD,MAFF;AAGjBH,EAAAA,UAAU,EAAE9C,SAAS,CAACkD,IAHL;AAIjBpB,EAAAA,YAAY,EAAE9B,SAAS,CAACmD,MAJP;AAKjB7B,EAAAA,gBAAgB,EAACtB,SAAS,CAACmD;AALV,C;;gBAFf1C,Y,kBAUkB;AACpBqC,EAAAA,UAAU,EAAE,KADQ;AAEpBF,EAAAA,OAAO,EAAE,IAFW;AAGpBd,EAAAA,YAAY,EAAC,EAHO;AAIpBR,EAAAA,gBAAgB,EAAC;AAJG,C;;AAqJxB,SAAS8B,eAAT,CAAyBjC,KAAzB,EAAgC;AAC5BQ,EAAAA,OAAO,CAACC,GAAR,CAAYT,KAAK,CAACkC,UAAN,CAAiB/B,gBAA7B;AACA,SAAO;AACJwB,IAAAA,UAAU,EAAE3B,KAAK,CAACkC,UAAN,CAAiBP,UADzB;AAEJF,IAAAA,OAAO,EAAEzB,KAAK,CAACkC,UAAN,CAAiBT,OAFtB;AAGJd,IAAAA,YAAY,EAAEX,KAAK,CAACkC,UAAN,CAAiBC,QAH3B;AAIJhC,IAAAA,gBAAgB,EAACH,KAAK,CAACkC,UAAN,CAAiB/B;AAJ9B,GAAP;AAMD;;AACH,eAAerB,OAAO,CAACmD,eAAD,CAAP,CAAyB3C,YAAzB,CAAf","sourcesContent":["import React, {PureComponent} from 'react';\nimport {\n  Row,\n  Col,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Button,\n  ButtonGroup,\n  Breadcrumb,\n  BreadcrumbItem,\n  Alert,\n} from 'reactstrap';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {Link } from 'react-router-dom';\nimport Widget from '../../components/Widget/Widget';\nimport { updateCategory,createCategory, getCategoryName,fetchCategory } from '../../actions/categories';\n\nimport s from '../profile/Profile.module.scss';\n\nclass CategoryEdit extends PureComponent {\n\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    message: PropTypes.string,\n    isFetching: PropTypes.bool,\n    categoryName: PropTypes.object,\n    categoryEditData:PropTypes.object,\n  };\n\n  static defaultProps = {\n    isFetching: false,\n    message: null,\n    categoryName:{},\n    categoryEditData:{},\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: '',\n      input: {\n        name:'',\n        image:'',\n        image_icon:'',\n        parent_id:'',\n      },\n      formData: {},\n      errors: {},\n      categoryName: {},\n      categoryEditData:{},\n      id : this.props.match.params.id\n    };\n  }\n\n  async componentDidMount(){\n    var id = this.state.id;\n     this.doEditCategory();\n     this.doGetCategoryName();\n  } \n\n  changeName = (event) => {\n    //console.log(event.target.value);\n    this.setState({name: event.target.value});\n  }\n\n  doEditCategory = () => {\n    try { \n      this.props\n          .dispatch(\n            fetchCategory({\n              categoryId: this.state.id,\n            }),\n          )\n          .then(() =>\n            this.setState({   \n             categoryEditData: this.props.categoryEditData,\n             //name: this.props.categoryEditData.name,\n            }),\n          ); \n          let input = {};\n            input[\"name\"] = this.state.categoryEditData.name;\n            input[\"image\"] = this.state.categoryEditData.image;\n            input[\"image_icon\"] = this.state.categoryEditData.image_icon;\n            input[\"parent_id\"] = this.state.categoryEditData.parent_id; \n            this.setState({input:input});\n            console.log(this.props.categoryEditData); \n      }catch (error) {\n      console.log(error);\n    }  \n  }\n\n  doGetCategoryName = () => {\n    try { \n      this.props\n          .dispatch(\n            getCategoryName({\n              categoryName: this.state.categoryName,\n            }),\n          )\n          .then(() =>\n            this.setState({\n              categoryName: this.props.categoryName,\n            }),\n          ); \n      }  catch (error) {\n      console.log(error);\n    }  \n  }\n\n  doUpdateCategory = (e) => {\n    this.props\n      .dispatch(\n        updateCategory({\n          name: this.state.name,\n          id:this.state.id,\n        }),\n      )\n      .then(() =>\n        this.setState({\n          name: '',\n        }),\n      );\n    e.preventDefault();\n  }\n\n  onSubmit(e) { \n    e.preventDefault();\n  }\n\n  render() {\n    return (\n      <div className={s.root}>\n        <Breadcrumb>\n          <BreadcrumbItem>YOU ARE HERE</BreadcrumbItem>\n          <BreadcrumbItem active>Category</BreadcrumbItem>\n        </Breadcrumb>\n        <h1 className=\"mb-lg\">Category</h1>\n        <Row>\n          <Col sm={6}>\n            <Widget\n              title={\n                <h5>\n                  Edit Category <span className=\"fw-semi-bold\">Form</span>\n                </h5>\n              }\n            >\n              <Form onSubmit={this.doUpdateCategory}>\n              {this.props.message && (\n                  <Alert className=\"alert-sm\" bsstyle=\"info\">\n                    {this.props.message}\n                  </Alert>\n                )}\n                <FormGroup>\n                  <Label for=\"input-name\">Name</Label>\n                  <Input bsSize=\"lg\" type=\"text\" name=\"name\" id=\"input-name\"  value={this.state.input.name}\n                    required\n                    onChange={this.changeName}/>\n                </FormGroup>\n\n                <div className=\"d-flex justify-content-between align-items-center\">\n                  <ButtonGroup className=\"pull-right\">\n                  <Link to=\"/app/categories\">\n                    <Button to=\"/app/categories\" className=\"ml-sm\" color=\"default\">Cancel</Button>\n                    </Link>\n                    <Button color=\"danger\" type=\"submit\">\n                      {this.props.isFetching ? 'Updating...' : 'Update'}\n                    </Button>\n                  </ButtonGroup>\n                </div>\n              </Form>\n            </Widget>\n          </Col>\n        </Row>\n      </div>\n    )\n  }\n}\nfunction mapStateToProps(state) {\n    console.log(state.categories.categoryEditData);\n    return {\n       isFetching: state.categories.isFetching,\n       message: state.categories.message,\n       categoryName: state.categories.category,\n       categoryEditData:state.categories.categoryEditData,\n    };\n  }\nexport default connect(mapStateToProps)(CategoryEdit);"]},"metadata":{},"sourceType":"module"}