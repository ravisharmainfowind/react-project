{"ast":null,"code":"import { CREATE_ROLE_INITIAL, CREATE_ROLE_REQUEST, CREATE_ROLE_SUCCESS, CREATE_ROLE_FAILURE, GET_ROLE_REQUEST, GET_ROLE_SUCCESS, GET_ROLE_FAILURE, FETCH_ROLES_REQUEST, FETCH_ROLES_SUCCESS, FETCH_ROLES_FAILURE, UPDATE_ROLE_REQUEST, UPDATE_ROLE_SUCCESS, UPDATE_ROLE_FAILURE, DELETE_ROLES_REQUEST, DELETE_ROLES_SUCCESS, DELETE_ROLES_FAILURE, STATUS_ROLES_REQUEST, STATUS_ROLES_SUCCESS, STATUS_ROLES_FAILURE } from '../actions/roles';\nexport default function roles(state = {\n  isFetching: false\n}, action) {\n  switch (action.type) {\n    case CREATE_ROLE_INITIAL:\n      return Object.assign({}, state, {\n        isFetching: false,\n        message: null\n      });\n\n    case CREATE_ROLE_REQUEST:\n      return Object.assign({}, state, {\n        isFetching: true\n      });\n\n    case CREATE_ROLE_SUCCESS:\n      return Object.assign({}, state, {\n        isFetching: false,\n        message: 'Role created successfully'\n      });\n\n    case CREATE_ROLE_FAILURE:\n      return Object.assign({}, state, {\n        isFetching: false,\n        message: 'Due to security reasons roles creation is closed in demo version. Please setup locally to test'\n      });\n\n    case GET_ROLE_REQUEST:\n      return Object.assign({}, state, {\n        isFetching: true\n      });\n\n    case GET_ROLE_SUCCESS:\n      return Object.assign({}, state, {\n        isFetching: false,\n        message: 'Role fetched successfully',\n        roles: action.roles\n      });\n\n    case GET_ROLE_FAILURE:\n      return Object.assign({}, state, {\n        isFetching: false,\n        message: 'Something went wrongh'\n      });\n\n    case FETCH_ROLES_REQUEST:\n      return Object.assign({}, state, {\n        isFetching: true\n      });\n\n    case FETCH_ROLES_SUCCESS:\n      return Object.assign({}, state, {\n        isFetching: false,\n        role: action.role\n      });\n\n    case FETCH_ROLES_FAILURE:\n      return Object.assign({}, state, {\n        isFetching: false,\n        message: 'Something wrong happened. Please come back later'\n      });\n\n    case UPDATE_ROLE_REQUEST:\n      return Object.assign({}, state, {\n        isFetching: true\n      });\n\n    case UPDATE_ROLE_SUCCESS:\n      return Object.assign({}, state, {\n        isFetching: false,\n        message: 'Role Updated successfully'\n      });\n\n    case UPDATE_ROLE_FAILURE:\n      return Object.assign({}, state, {\n        isFetching: false,\n        message: 'Due to security reasons roles creation is closed in demo version. Please setup locally to test'\n      });\n\n    case DELETE_ROLES_REQUEST:\n      return Object.assign({}, state, {\n        isFetching: true\n      });\n\n    case DELETE_ROLES_SUCCESS:\n      return Object.assign({}, state, {\n        isFetching: false,\n        role: action.role,\n        deleteMessage: action.deleteMessage\n      });\n\n    case DELETE_ROLES_FAILURE:\n      return Object.assign({}, state, {\n        isFetching: false,\n        message: 'Something wrong happened. Please come back later'\n      });\n\n    case STATUS_ROLES_REQUEST:\n      return Object.assign({}, state, {\n        isFetching: true\n      });\n\n    case STATUS_ROLES_SUCCESS:\n      return Object.assign({}, state, {\n        isFetching: false,\n        role: action.role,\n        statusMessage: action.statusMessage\n      });\n\n    case STATUS_ROLES_FAILURE:\n      return Object.assign({}, state, {\n        isFetching: false,\n        message: 'Something wrong happened. Please come back later'\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/opt/lampp/htdocs/react-dashboard-master/src/reducers/roles.js"],"names":["CREATE_ROLE_INITIAL","CREATE_ROLE_REQUEST","CREATE_ROLE_SUCCESS","CREATE_ROLE_FAILURE","GET_ROLE_REQUEST","GET_ROLE_SUCCESS","GET_ROLE_FAILURE","FETCH_ROLES_REQUEST","FETCH_ROLES_SUCCESS","FETCH_ROLES_FAILURE","UPDATE_ROLE_REQUEST","UPDATE_ROLE_SUCCESS","UPDATE_ROLE_FAILURE","DELETE_ROLES_REQUEST","DELETE_ROLES_SUCCESS","DELETE_ROLES_FAILURE","STATUS_ROLES_REQUEST","STATUS_ROLES_SUCCESS","STATUS_ROLES_FAILURE","roles","state","isFetching","action","type","Object","assign","message","role","deleteMessage","statusMessage"],"mappings":"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","sourcesContent":["import {\n    CREATE_ROLE_INITIAL,\n    CREATE_ROLE_REQUEST,\n    CREATE_ROLE_SUCCESS,\n    CREATE_ROLE_FAILURE,\n    GET_ROLE_REQUEST,\n    GET_ROLE_SUCCESS,\n    GET_ROLE_FAILURE,\n    FETCH_ROLES_REQUEST,\n    FETCH_ROLES_SUCCESS,\n    FETCH_ROLES_FAILURE,\n    UPDATE_ROLE_REQUEST,\n    UPDATE_ROLE_SUCCESS,\n    UPDATE_ROLE_FAILURE,\n    DELETE_ROLES_REQUEST,\n    DELETE_ROLES_SUCCESS,\n    DELETE_ROLES_FAILURE,\n    STATUS_ROLES_REQUEST,\n    STATUS_ROLES_SUCCESS,\n    STATUS_ROLES_FAILURE,\n  } from '../actions/roles';\n  \n  export default function roles(\n    state = {\n      isFetching: false,\n    },\n    action,\n  ) {\n    switch (action.type) {\n      case CREATE_ROLE_INITIAL:\n        return Object.assign({}, state, {\n          isFetching: false,\n          message: null,\n        });\n      case CREATE_ROLE_REQUEST:\n        return Object.assign({}, state, {\n          isFetching: true,\n        });\n      case CREATE_ROLE_SUCCESS:\n        return Object.assign({}, state, {\n          isFetching: false,\n          message: 'Role created successfully',\n        });\n      case CREATE_ROLE_FAILURE:\n        return Object.assign({}, state, {\n          isFetching: false,\n          message:\n            'Due to security reasons roles creation is closed in demo version. Please setup locally to test',\n        });\n        case GET_ROLE_REQUEST:\n        return Object.assign({}, state, {\n          isFetching: true,\n        });\n      case GET_ROLE_SUCCESS:\n        return Object.assign({}, state, {\n          isFetching: false,\n          message: 'Role fetched successfully',\n          roles: action.roles,\n        });\n      case GET_ROLE_FAILURE:\n        return Object.assign({}, state, {\n          isFetching: false,\n          message:\n            'Something went wrongh',\n        });\n      case FETCH_ROLES_REQUEST:\n        return Object.assign({}, state, {\n          isFetching: true,\n        });\n      case FETCH_ROLES_SUCCESS:\n        return Object.assign({}, state, {\n          isFetching: false,\n          role: action.role,\n        });\n      case FETCH_ROLES_FAILURE:\n        return Object.assign({}, state, {\n          isFetching: false,\n          message: 'Something wrong happened. Please come back later',\n        });\n        case UPDATE_ROLE_REQUEST:\n        return Object.assign({}, state, {\n          isFetching: true,\n        });\n      case UPDATE_ROLE_SUCCESS:\n        return Object.assign({}, state, {\n          isFetching: false,\n          message: 'Role Updated successfully',\n        });\n      case UPDATE_ROLE_FAILURE:\n        return Object.assign({}, state, {\n          isFetching: false,\n          message:\n            'Due to security reasons roles creation is closed in demo version. Please setup locally to test',\n        });\n        case DELETE_ROLES_REQUEST:\n        return Object.assign({}, state, {\n          isFetching: true,\n        });\n      case DELETE_ROLES_SUCCESS:\n        return Object.assign({}, state, {\n          isFetching: false,\n          role: action.role,\n          deleteMessage:action.deleteMessage,\n        });\n      case DELETE_ROLES_FAILURE:\n        return Object.assign({}, state, {\n          isFetching: false,\n          message: 'Something wrong happened. Please come back later',\n        });\n        case STATUS_ROLES_REQUEST:\n        return Object.assign({}, state, {\n          isFetching: true,\n        });\n      case STATUS_ROLES_SUCCESS:\n        return Object.assign({}, state, {\n          isFetching: false,\n          role: action.role,\n          statusMessage:action.statusMessage,\n        });\n      case STATUS_ROLES_FAILURE:\n        return Object.assign({}, state, {\n          isFetching: false,\n          message: 'Something wrong happened. Please come back later',\n        });\n      default:\n        return state;\n    }\n  }\n  "]},"metadata":{},"sourceType":"module"}