{"ast":null,"code":"import { Type } from '../actions/type';\nexport const POST_PRODUCTS_REQUEST = 'POST_PRODUCTS_REQUEST';\nexport const GET_PRODUCTS_SUCCESS = 'GET_PRODUCTS_SUCCESS';\nexport const GET_PRODUCTS_FAILURE = 'GET_PRODUCTS_FAILURE';\nexport const POST_ADD_PRODUCT_REQUEST = 'POST_ADD_PRODUCT_REQUEST';\nexport const GET_ADD_PRODUCT_SUCCESS = 'GET_ADD_PRODUCT_SUCCESS';\nexport const GET_ADD_PRODUCT_FAILURE = 'GET_ADD_PRODUCT_FAILURE';\nexport default function products(state = {\n  isFetching: false\n}, action) {\n  switch (action.type) {\n    case Type.product.POST_PRODUCTS_REQUEST:\n      return Object.assign({}, state, {\n        isFetching: true\n      });\n\n    case Type.product.GET_PRODUCTS_SUCCESS:\n      return Object.assign({}, state, {\n        isFetching: false,\n        message: 'Category created successfully'\n      });\n\n    case Type.product.GET_PRODUCTS_FAILURE:\n      return Object.assign({}, state, {\n        isFetching: false,\n        message: 'Due to security reasons category creation is closed in demo version. Please setup locally to test'\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/opt/lampp/htdocs/react-dashboard-master/src/reducers/products.js"],"names":["Type","POST_PRODUCTS_REQUEST","GET_PRODUCTS_SUCCESS","GET_PRODUCTS_FAILURE","POST_ADD_PRODUCT_REQUEST","GET_ADD_PRODUCT_SUCCESS","GET_ADD_PRODUCT_FAILURE","products","state","isFetching","action","type","product","Object","assign","message"],"mappings":"AAAA,SAAQA,IAAR,QAAmB,iBAAnB;AACA,OAAO,MAAMC,qBAAqB,GAAK,uBAAhC;AACP,OAAO,MAAMC,oBAAoB,GAAM,sBAAhC;AACP,OAAO,MAAMC,oBAAoB,GAAM,sBAAhC;AAEP,OAAO,MAAMC,wBAAwB,GAAK,0BAAnC;AACP,OAAO,MAAMC,uBAAuB,GAAM,yBAAnC;AACP,OAAO,MAAMC,uBAAuB,GAAM,yBAAnC;AAEL,eAAe,SAASC,QAAT,CACbC,KAAK,GAAG;AACNC,EAAAA,UAAU,EAAE;AADN,CADK,EAIbC,MAJa,EAKb;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,IAAI,CAACY,OAAL,CAAaX,qBAAlB;AACE,aAAOY,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyB;AAC9BC,QAAAA,UAAU,EAAE;AADkB,OAAzB,CAAP;;AAGF,SAAKT,IAAI,CAACY,OAAL,CAAaV,oBAAlB;AACE,aAAOW,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyB;AAC9BC,QAAAA,UAAU,EAAE,KADkB;AAE9BM,QAAAA,OAAO,EAAE;AAFqB,OAAzB,CAAP;;AAIF,SAAKf,IAAI,CAACY,OAAL,CAAaT,oBAAlB;AACE,aAAOU,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyB;AAC9BC,QAAAA,UAAU,EAAE,KADkB;AAE9BM,QAAAA,OAAO,EACL;AAH4B,OAAzB,CAAP;;AAKF;AACE,aAAOP,KAAP;AAjBJ;AAmBD","sourcesContent":["import {Type} from '../actions/type';\nexport const POST_PRODUCTS_REQUEST   = 'POST_PRODUCTS_REQUEST';\nexport const GET_PRODUCTS_SUCCESS    = 'GET_PRODUCTS_SUCCESS';\nexport const GET_PRODUCTS_FAILURE    = 'GET_PRODUCTS_FAILURE';\n\nexport const POST_ADD_PRODUCT_REQUEST   = 'POST_ADD_PRODUCT_REQUEST';\nexport const GET_ADD_PRODUCT_SUCCESS    = 'GET_ADD_PRODUCT_SUCCESS';\nexport const GET_ADD_PRODUCT_FAILURE    = 'GET_ADD_PRODUCT_FAILURE';\n  \n  export default function products(\n    state = {\n      isFetching: false,\n    },\n    action,\n  ) {\n    switch (action.type) {  \n      case Type.product.POST_PRODUCTS_REQUEST:\n        return Object.assign({}, state, {\n          isFetching: true,\n        });\n      case Type.product.GET_PRODUCTS_SUCCESS:\n        return Object.assign({}, state, {\n          isFetching: false,\n          message: 'Category created successfully',\n        });\n      case Type.product.GET_PRODUCTS_FAILURE:\n        return Object.assign({}, state, {\n          isFetching: false,\n          message:\n            'Due to security reasons category creation is closed in demo version. Please setup locally to test',\n        });\n      default:\n        return state;\n    }\n  }\n  \n"]},"metadata":{},"sourceType":"module"}